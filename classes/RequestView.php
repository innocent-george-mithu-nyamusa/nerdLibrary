<?php


namespace Classes;


class RequestView extends RequestContr
{
    public function createRequest(
        string $itemName,
        string $itemColor,
        string $itemSerial,
        string $itemDescription,
        float $itemValue,
        string $itemImage,
        $imageTemp,
        string $itemCreaterId,

    ):?bool
    {
        $imageName = Utilities::uploadPhoto($itemImage, $imageTemp, "request");
        if(!$imageName) {
            $imageName = $itemImage;
        }
        $this->setCRequestItemName($itemName);
        $this->setCRequestItemId();
        $this->setRequestItemColor($itemColor);
        $this->setCRequestItemSerial($itemSerial);
        $this->setCRequestItemDescription($itemDescription);
        $this->setCRequestItemValue($itemValue);
        $this->setCRequestItemImage($imageName);
        $this->setCRequestItemSubmitter($itemCreaterId);

        return $this->createItemRequestResult();
    }

    public function getResourceId(): string {
        return parent::getRequestItemId();
    }

    public function updateRequest(
        string $itemRequestId,
        string $itemName,
        string $itemColor,
        string $itemSerial,
        string $itemDescription,
        float $itemValue,
        string $oldItemImage,
        string $itemImage,
        $imageTemp,
        string $itemCreaterId,

    ):?bool
    {
        Utilities::deletePhoto($oldItemImage, "item");
        $imageName = Utilities::uploadPhoto($itemImage, $imageTemp, "item");
        if(!$imageName) {
            $imageName = $itemImage;
        }

        $this->setCRequestItemName($itemName);
        $this->addCRequestItemId($itemRequestId);
        $this->setRequestItemColor($itemColor);
        $this->setCRequestItemSerial($itemSerial);
        $this->setCRequestItemDescription($itemDescription);
        $this->setCRequestItemValue($itemValue);
        $this->setCRequestItemImage($imageName);
        $this->setCRequestItemSubmitter($itemCreaterId);

        return $this->createItemRequestResult();
    }

    public function getAllRequests(): ?array {

        return parent::getAllItemsRequestResult();
}

    public function getClaimedRequests(): ?array {

        return parent::getAllClaimedRequestsStatus();
    }


    public function getActiveRequests(): ?array
    {
        return parent::getActiveRequestsResult(); // TODO: Change the autogenerated stub
    }

    public function getCancelledRequests(): ?array
    {
        return parent::getCancelledRequestsStatus(); // TODO: Change the autogenerated stub
    }


}